package WrathfulSmite
import Hero
import LinkedList
import Leonara_Data
import PactOfWrath

public LinkedList<WrathfulSmiteSpell> SPELL_INSTANCES_WRATHFULSMITE=new LinkedList<WrathfulSmiteSpell>()

constant string WRATHFULSMITE_EFFECT="Abilities/Spells/Orc/SpiritLink/SpiritLinkTarget.mdl"
constant string WRATHFULSMITE_EFFECT_ATTACH="weapon"
constant real WRATHFULSMITE_BASE_DURATION=6.

class WrathfulSmiteSpell
        unit caster
        real duration
        real damage
        timer t
        effect e=null

        construct(unit u)
                PlayerHero h=getPlayerHero(u)
                if h==null
                        this.duration=WRATHFULSMITE_BASE_DURATION
                else
                        this.duration=WRATHFULSMITE_BASE_DURATION*(1 + h.getStat('CONC'))
                this.caster=u
                this.damage=calcDamage()
                this.t=CreateTimer()

                SPELL_INSTANCES_WRATHFULSMITE.add(this)
                //Create a timer that destorys the spell after its duration
                TimerStart(this.t, this.duration, false, function endSpell)
                this.e=this.caster.addEffect(WRATHFULSMITE_EFFECT, WRATHFULSMITE_EFFECT_ATTACH)
                //Adds a buff !DOES NOT WORK!
                this.caster.addAbility(BUFF_ID_WRATHFULSMITE) 

        function getDamage() returns real
                return this.damage

        function getDuration() returns real
                return this.duration

        function getCaster() returns unit
                return this.caster
        
        function getTimer() returns timer
                return this.t

        function calcDamage() returns real
                int rolls=caster.getDiceNumber(1)       // Number of damage dice
                int sides=caster.getDiceSides(1)        // type of dice, number of sides of each dice
                int flat=caster.getBaseDamage(1)        // flat damage of unit, without any dice
                real amount=0
                // simulates the dice rolls and add them together. number of rolls = number of dices
                for int j=0 to rolls
                        amount+=GetRandomInt(1, sides)
                amount+=flat    // adds the flat damage to the random amount
                return amount

        
        ondestroy
                SPELL_INSTANCES_WRATHFULSMITE.remove(this)
                DestroyEffect(e)
                DestroyTimer(this.t)
                //Removes the buff !DOES NOT WORK!
                this.caster.removeAbility(BUFF_ID_WRATHFULSMITE)
                this.caster=null

//is getting the expired timer and removed the spell instance from the list and destorys if after that
function endSpell() 
        timer t=GetExpiredTimer()
        LLIterator<WrathfulSmiteSpell> i=SPELL_INSTANCES_WRATHFULSMITE.iterator()
        WrathfulSmiteSpell check
        while i.hasNext()
                check=i.next()
                if t==check.getTimer()
                        destroy check
                        break
        
//function for the DamageType2 Package, to get the damage amp if it als an instance of this spell
public function checkWrathfulSmite(unit u) returns real
        real dmgAmp=0.
        WrathfulSmiteSpell check=unitInList(u)
        if check!=null
                dmgAmp=check.getDamage()
                getPactOfWrathStack(u)
                destroy check
        return dmgAmp

// if the unit is in an instance of this spell, it returns that instance, else it returns null
function unitInList(unit u) returns WrathfulSmiteSpell
        WrathfulSmiteSpell check=null
        LLIterator<WrathfulSmiteSpell> i=SPELL_INSTANCES_WRATHFULSMITE.iterator()
        while i.hasNext()	
                check=i.next()
                if u==check.getCaster()
                        break
                check=null
        return check            

// Check if the casting spell is Wrathful Smite
function thisSpell() returns boolean
        return GetSpellAbilityId()==LEONARA_SPELL_ID_Q

/*Create a spell instance depending on: 1. if there is an instance for this unit already -> resets the duration
                                        2. if the unit is a PlayerHero or not -> uses different constructors (especially for the duration due to the HERO_STAT_CONCENTRATION)
*/

function initSpell()
        unit u=GetTriggerUnit()
        WrathfulSmiteSpell check
        check=unitInList(u)
        if check==null //Checks if there is already a instance of this spell for the casting unit and only resets the timer if it isnt null (see 'else')
                if thisSpell() //checks if the unit is a PlayerHero or a simple unit
                        new WrathfulSmiteSpell(u)
        else
                TimerStart(check.getTimer(),check.getDuration(),false,function endSpell) //Timer is getting a reset here

        
//================TRIGGERCREATION===========================
let WS=CreateTrigger()
        ..addAction(function initSpell)
        ..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_CAST)
//==========================================================