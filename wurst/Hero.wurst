package Hero

class PlayerHero
	unit hero
	ability P
	ability Q
	ability W
	ability E
	ability R

	construct(unit h, ability q, ability w, ability e, ability r, ability p)
		this.hero=h
		this.P=p
		this.Q=q
		this.W=w
		this.E=e
		this.R=r

	// reduces the cooldown of a given ability based on a flat amount
	function reduceCooldown(ability a, real amount)
		BlzSetUnitAbilityCooldown(hero, a.getHandleId(),GetUnitAbilityLevel(hero,a.getHandleId()), amount)

	// Reduces the cooldown of each ability based on a flat amount
	function reduceGlobalCooldown(real amount)
		reduceCooldown(Q,amount)
		reduceCooldown(W,amount)
		reduceCooldown(E,amount)
		reduceCooldown(R,amount)
	
	// Reduces the cooldown of each ability based on the maximum cooldown and a given percentage
	function reduceGlobalCooldownPercentMax(real percentage)
		real amount

		amount=getCooldownMax(Q)*percentage
		reduceCooldown(Q,amount)

		amount=getCooldownMax(W)*percentage
		reduceCooldown(W,amount)

		amount=getCooldownMax(E)*percentage
		reduceCooldown(E,amount)

		amount=getCooldownMax(R)*percentage
		reduceCooldown(R,amount)

	// Reduces the cooldown of each ability based on the remaining cooldown and a given percentage
	function reduceGlobalCooldownPercentRemaining(real percentage)
		real amount=getCooldownRemaining(Q)*percentage
		reduceCooldown(Q,amount)
		amount=getCooldownRemaining(W)*percentage
		reduceCooldown(W,amount)
		amount=getCooldownRemaining(E)*percentage
		reduceCooldown(E,amount)
		amount=getCooldownRemaining(R)*percentage
		reduceCooldown(R,amount)

	// ------------------------------------------

	// Returns the maximum cooldown of a given ability
	function getCooldownMax(ability a) returns real
		real cooldown=BlzGetUnitAbilityCooldown(hero, a.getHandleId(), GetUnitAbilityLevel(hero,a.getHandleId()))
		return cooldown
	
	// Returns the remaining cooldown of a given ability
	function getCooldownRemaining(ability a) returns real
		real cooldown=BlzGetUnitAbilityCooldownRemaining(hero, a.getHandleId())
		return cooldown
	
