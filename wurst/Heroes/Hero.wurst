package Hero
import LinkedList
import ClosureTimers

public LinkedList<PlayerHero> PLAYER_HEROES = new LinkedList<PlayerHero>

public enum HeroStat
	HpReg
	MpReg
	CritChance
	CritDmg
	Tenacity
	Concentration
	Cooldown
	HealingPower

public abstract class PlayerHero
	//Actual hero unit
	unit HERO_UNIT

	// Abilities
	int HERO_SPELL_P
	int HERO_SPELL_Q
	int HERO_SPELL_W
	int HERO_SPELL_E
	int HERO_SPELL_R

	// Additional Stats								// DESCRIPTION
	real 	HERO_STAT_HPREG=0.5						// hit point regeneration per second
	real 	HERO_STAT_MANAREG=0.5					// mana regeneration per second
	real 	HERO_STAT_CRITCHANCE=0.					// chance to crit
	real 	HERO_STAT_CRITDAMAGE=1.5				// increased crit damage, standard is 150%
	real 	HERO_STAT_TENACITY=0. 					// Status resistance
	real 	HERO_STAT_CONCENTRATION=0.				// buff/debuff duration multiplier
	real 	HERO_STAT_COOLDOWNPERCENT=0. 			// global % CDR
	real 	HERO_STAT_HEALINGPOWER=0. 				// global flat CDR
	
	// stats missing?

	construct(player owner, int unitId, real posX, real posY, real angle)
		HERO_UNIT=createUnit(owner, unitId, vec2(posX,posY), angle(angle))

	//returns the hero unit
	function getHero() returns unit
		return this.HERO_UNIT
	
	//Returns the stat with the given id. the IDs are listed above and in the function itself. Just check.
	function getStat(HeroStat name) returns real
		real r
		switch(name)
			case HpReg
				r=HERO_STAT_HPREG
			case MpReg
				r=HERO_STAT_MANAREG
			case CritChance
				r=HERO_STAT_CRITCHANCE
			case CritDmg
				r=HERO_STAT_CRITDAMAGE
			case Tenacity
				r=HERO_STAT_TENACITY
			case Concentration
				r=HERO_STAT_CONCENTRATION
			case Cooldown
				r=HERO_STAT_COOLDOWNPERCENT
			case HealingPower
				r=HERO_STAT_HEALINGPOWER
			default
				r=0.
				//Debug message if the given stat is invalid
				print("ERROR: Hero stat not found!")
		return r

//returns the PlayerHero of given unit. 
//returns null if the unit is not a PlayerHero.
public function getPlayerHero(unit u) returns PlayerHero
	PlayerHero check=null
	//checks the whole list if the given unit is a PlayerHero.
	LLIterator<PlayerHero> i=PLAYER_HEROES.iterator()
	
	while i.hasNext()	
		check=i.next()
		if u==check.getHero()
			break
		check=null

	if check==null
		print("ERROR: '"+ u.getName() + "' is no PlayerHero!")
	return check